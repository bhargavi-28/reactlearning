<div className="newproduct">
        <input
          type="text"
          placeholder="name"
          onChange={(event) => setname(event.target.value)}
          value={name}
        />
        <input
          type="text"
          placeholder="price"
          onChange={(event) => setprice(event.target.value)}
          value={price}
        />
        <input
          type="text"
          placeholder="poster"
          onChange={(event) => setposter(event.target.value)}
          value={poster}
        />
        <input
          type="text"
          placeholder="cat"
          onChange={(event) => setcat(event.target.value)}
          value={category}
        />
        <input
          type="text"
          placeholder="rating"
          onChange={(event) => setrating(event.target.value)}
          value={rating}
        />
        <input
          type="text"
          placeholder="dis"
          onChange={(event) => (setdiscrip(event.target.value))}
          value={discrip}
        />
        <button
          onClick={() => {
            const newpro = {
              //  name:name,
              //  price:price,
              //  poster:poster,
              //  category: cat,
              //  rating:rating,
              //  discrip:dicrip
              //instead of above we can use object shorthand as both key value are same
              name,
              price,
              poster,
              category,
              rating,
              discrip
            }; 
            setproList([...product_list, newpro])
          }}
        >add product</button>


      </div>
      <div className="list">
        {product_list.map((itme, index) => (
          <Prouduct key={index} product={itme} id={index} />
        ))}
      </div>


      import { useState } from "react";
import DeleteIcon from '@mui/icons-material/Delete';
import IconButton from '@mui/material/IconButton';
import * as React from 'react';
import Badge from '@mui/material/Badge';
import MailIcon from '@mui/icons-material/Mail';
export function Buttonfun() {

  // return(
  //   <> <button
  //        onClick={() => {
  //         like++;
  //         console.log(like);
  //        }}> like</button>
  //   <p>{like}</p>
  //   </>
  // )
  //using hook statment to create a event cuz in the above
  // like is not getting incremented in the ui
  const [like, setLike] = useState(1);
  const [dis, setDis] = useState(10);
  return (
    <>
      <IconButton 
      aria-label="like btn"
        onClick={() => {
          setLike(like + 1);
          console.log(like);
        }} 
        color="primary"
        >
          {/* üëç{like} */}
          <Badge badgeContent={like} color="primary">
  <MailIcon color="action" />
</Badge>
        
      </IconButton>


      -----------------------button funtion simple------------------



      export function Buttonfun() {

  // return(
  //   <> <button
  //        onClick={() => {
  //         like++;
  //         console.log(like);
  //        }}> like</button>
  //   <p>{like}</p>
  //   </>
  // )
  //using hook statment to create a event cuz in the above
  // like is not getting incremented in the ui
  const [like, setLike] = useState(1);
  const [dis, setDis] = useState(10);
  return (
    <>
      <button
        onClick={() => {
          setLike(like + 1);
          console.log(like);
        }}> 

      </button>
      <p> üëç{like}</p>


      <button
        onClick={() => {
          setDis(dis + 1);
          console.log(dis);
        }}> üëé {dis}

      </button>
    </>
  );
}
----------------------------------



-----------------before using lifting concept ---------------------



<Routes>
         
          
        <Route path="/" element={<Home />} />
        <Route path="/products" element={<ProductList />} />
        <Route path="/colorBox" element={<Addcolor />} />
        <Route path="/productAppMembers" element={<Profilemembers/>} />
        <Route path="/products/:id" element={<Productdetails/>} />
        
        <Route path="*" element={<NotFoundpage/>} />
        {/* <Route path= "/addproduct" element={<Addproduct/>}/> */}
      </Routes>


-------------------before using context concept ----------------
export default function App() {
  // is the parent 
  //-----js starts------
  const [product_list, setproList] = useState(PRO_LIST)
  //the above process is called lifting the state up or lifted from child to parent

  const theme = createTheme({     //------step 1) creating the context
    palette: {
      mode: 'light',  //"light"= light theme, "dark" = dark theme
    },
  });


  //--------js ends--------
  //---------jsx starts--------
  return (
    <ThemeProvider theme={theme}>
      {/* ------step 2) publisher=> provider=> context. provider */}
      <CssBaseline />
      <div className="App">
        <nav>
          {/* navigation in the web page/app */}
          {/* we prefer <Link to> tag over <a> cuz it chamges the page without reloading or refresh */}
          <ul>
            <li>
              <Link to="/">Home</Link> {/*or  <a href="/">Home</a> */}
            </li>
            <li>
              <Link to="/products">ProductList</Link> {/* or <a href="/products">ProductList</a> */}
            </li>
            <li>
              <Link to="/colorBox">Addcolor</Link> {/*or <a href="/colorBox">Addcolor</a> */}
            </li>
            <li>
              <Link to="/productAppMembers">Profilemembers</Link>  {/* or <a href="/productAppMembers">Profilemembers</a> */}
            </li>
            <li>

              <Link to="/blabla">End</Link>
            </li>
            {/* <li>
            <Link to ="/products/:id">product details </Link>
           </li> */}
            {/* <li> */}
            {/* <Link to ="/addproduct" >add product</Link>
           </li> */}
          </ul>
        </nav>
        <Routes>


          <Route path="/" element={<Home />} />
          <Route path="/products" element={<ProductList product_list={product_list} setproList={setproList} />} />
          <Route path="/colorBox" element={<Addcolor />} />
          <Route path="/productAppMembers" element={<Profilemembers />} />
          <Route path="/products/:id" element={<Productdetails product_list={product_list} setproList={setproList} />} />

          <Route path="*" element={<NotFoundpage />} />
          {/* <Route path= "/addproduct" element={<Addproduct/>}/> */}
        </Routes>
        <div>
          {/* <h1>Hello {name1}</h1>
      <h2> {wel} Start !</h2> */}
          {/* <Welcome n=" naruto" />
      <Welcome n="itadori " />
      <Welcome n="luffy " /> */}

          {/* in the above lines we called welcome each times, 
      instead we can use loop using map funtion */}
          {/* ---------------------------------- */}
          {/* { person.map((names) =>(
      <Welcome n={names} />
     ))} */}

          {/* // compenent one over  */}


          {/* <Profile
        dp="https://imgix.ranker.com/list_img_v2/18411/518411/original/my-top-10-favorite-anime-characters-u2"
        name="uzcumaki naruto"
      />
      <Profile
        dp="https://i.pinimg.com/1200x/3f/f3/84/3ff3847f6487e15456dcf52d2f3dcbfe.jpg"
        name="itadori yuji"
      />
      <Profile
        dp="https://m.media-amazon.com/images/I/71azOmQbOYL.jpg"
        name="luffy "
      /> */}
          {/* instead of above lines use looping by mapping */}

          {/* {picture.map((pics)=>(
        <Profile dp={pics.dp}
        name={pics.name}/>
      ))} */}
          {/* <Buttonfun/> */}
          {/* <Addcolor /> */}
          {/* <ColorBoxs/> */}


        </div >
      </div>
    </ThemeProvider>
  );
  {/* //jsx ends */ }
}
-------------------------------------------------------------